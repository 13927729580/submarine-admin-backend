package <%= package %>.modules.<%= module %>.dto;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import <%= package %>.common.base.BaseDto;
import <%= package %>.modules.<%= module %>.entity.<%= Entity %>;
import <%= package %>.modules.<%= module %>.mapstruct.<%= Entity %>MapStruct;
import org.mapstruct.factory.Mappers;
import java.math.BigDecimal;

@AllArgsConstructor
@NoArgsConstructor
@Data
@Builder
public class <%= Entity %>Dto extends BaseDto {

<%
    function getType(str) {
        if(str == 'varchar') return 'String';
        if(str == 'text') return 'String';
        if(str == 'bigint') return 'Long';
        if(str == 'double') return 'Double';
        if(str == 'decimal') return 'BigDecimal';
        if(str == 'datetime') return 'Date';
        if(str == 'int') return 'Integer';
    } 
-%>
<% baseField = ['id', 'remark', 'createBy', 'createTime', 'updateBy', 'updateTime', 'delFlag']; -%>

<% fields.forEach(function(field){ -%>
    <%_ if( !baseField.includes(field.field) ) { -%>
    /**
     * <%= field.comment %>
     */
    private <%= getType(field.type) %> <%= field.field %>;

    <%_ } -%>
<% }); -%>

    public static <%= Entity %> toEntity(<%= Entity %>Dto <%= entity %>Dto) {
        <%= Entity %>MapStruct mapStruct = Mappers.getMapper( <%= Entity %>MapStruct.class );
        return mapStruct.toEntity(<%= entity %>Dto);
    }

    public static <%= Entity %>Dto toDto(<%= Entity %> <%= entity %>) {
        <%= Entity %>MapStruct mapStruct = Mappers.getMapper( <%= Entity %>MapStruct.class );
        return mapStruct.toDto(<%= entity %>);
    }

}
